// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())
    name String
    email String?
    phone String?
    password String?
    companyName String?
    siret String?
    ape String?
    address String?
    bankAccountOwner String?
    bankDomiciliation String?
    bankRib String?
    bankIban String?
    bankBic String?
    githubId String @unique
    OrganizationType OrganizationType[]
    Organization Organization[]
    Mission Mission[]
    createdAt DateTime @default(now()) @db.Date
}


model OrganizationType {
    id String @id @default(uuid())
    name String
    color String
    Organization Organization[]
    userId String
    User User @relation(fields: [userId], references: [id])
    createdAt DateTime @default(now())
}

model Organization {
    id String @id @default(uuid())
    name String
    reference String
    email String
    phone String
    address String
    siret String
    organizationTypeId String
    organizationType OrganizationType @relation(fields: [organizationTypeId], references: [id])
    userId String
    user User @relation(fields: [userId], references: [id])
    missions Mission[]
    contributions Contribution[]
    createdAt DateTime @default(now())
}

model Mission {
    id String @id @default(uuid())
    reference String
    title String
    comment String?
    deposit Int
    organizationId String
    Organization Organization @relation(fields: [organizationId], references: [id])
    userId String
    user User @relation(fields: [userId], references: [id])
    MissionLine MissionLine[]
    billedAt DateTime?
    createdAt DateTime @default(now())
}

model MissionLine {
    id String @id @default(uuid())
    title String
    quantity Int
    price Int
    unit String
    missionId String
    Mission Mission @relation(fields: [missionId], references: [id])
    createdAt DateTime @default(now())
}

model Contribution {
    id String @id @default(uuid())
    title String
    comment String?
    price Int
    organizationId String
    Organization Organization @relation(fields: [organizationId], references: [id])
    createdAt DateTime @default(now())
}

model Transaction {
    id String @id @default(uuid())
    sourceType String
    sourceId String
    price Int
    paidAt DateTime?
    createdAt DateTime @default(now())
}
